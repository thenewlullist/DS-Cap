tb[1:6]
symbols(x, y, circles=tb[1:6]$confidence)
x<-rnorm(6,3,2)
y<-rnorm(6,3,2)
symbols(x, y, circles=tb[1:6]$confidence)
x<-rnorm(6,3,2)
x
x<-rnorm(6,6,2)
y<-rnorm(6,6,2)
symbols(x, y, circles=tb[1:6]$confidence)
y<-rnorm(6,6,1)
x<-rnorm(6,6,1)
symbols(x, y, circles=tb[1:6]$confidence)
x<-rnorm(6,6,2)
symbols(x, y, circles=tb[1:6]$confidence)
x<-rnorm(6,6,1)
symbols(x, y, circles=tb[1:6]$confidence)
x<-rnorm(6,6,3)
y<-rnorm(6,6,1)
symbols(x, y, circles=tb[1:6]$confidence)
radius <- sqrt( crime$population/ pi )
symbols(crime$murder, crime$burglary, circles=radius)
radius <- sqrt( tb[1:6]$confidence/ pi )
symbols(x, y, circles=radius)
symbols(crime$murder, crime$burglary, circles=radius, inches=0.35, fg="white", bg="rainbow", xlab=F, ylab=F)
symbols(x,y, circles=radius, inches=0.35, fg="white", bg="rainbow", xlab=F, ylab=F)
symbols(x,y, circles=radius, inches=0.35, fg="white", bg="random", xlab=F, ylab=F)
symbols(x,y, circles=radius, inches=0.35, fg="white", bg="red", xlab=F, ylab=F)
colors()
round(rnorm(1,328,164))
round(rnorm(1,328,328))
round(rnorm(1,328,328))
round(rnorm(1,328,328))
round(rnorm(1,328,328))
round(rnorm(1,328,328))
round(rnorm(1,328,657))
round(rnorm(1,328,657))
round(rnorm(1,328,164))
round(rnorm(1,328,164))
round(rnorm(1,328,164))
round(rnorm(1,328,164))
round(rnorm(1,328,164))
round(rnorm(1,328,164))
round(rnorm(1,328,164))
round(rnorm(1,328,164))
round(rnorm(1,328,164))
round(rnorm(1,328,200))
round(rnorm(1,328,200))
round(rnorm(1,328,200))
round(rnorm(1,328,200))
round(rnorm(1,328,200))
round(rnorm(1,328,200))
round(rnorm(1,328,200))
round(rnorm(1,328,200))
round(rnorm(1,328,200))
round(rnorm(1,328,200))
round(rnorm(1,328,160))
round(rnorm(1,328,160))
round(rnorm(1,328,160))
round(rnorm(1,328,160))
round(rnorm(1,328,160))
round(rnorm(1,328,160))
round(rnorm(1,328,160))
round(rnorm(1,328,160))
colors[364]
colors<-colors()
symbols(x,y, circles=radius, inches=0.35, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
symbols(x,y, circles=radius, inches=0.35, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
symbols(x,y, circles=radius, inches=0.35, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
symbols(x,y, circles=radius, inches=0.35, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
symbols(x,y, circles=radius, inches=0.35, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
symbols(x,y, circles=radius, inches=0.35, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
symbols(x,y, circles=radius, inches=0.35, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(labels=tb[1:6], cex=0.5)
text(x=NULL,labels=tb[1:6], cex=0.5)
text(x,y,labels=tb[1:6], cex=0.5)
text(x,y,labels=tb[1:6], cex=3.5)
text(x,y,labels=tb[1:6], cex=1.5)
text(x,y,labels=tb[1:6], cex=1.5)
text(x,y,labels=tb[1,1:6], cex=1.5)
tb[,.(Words)]
tb[,.(words)]
tb[,.(Word)]
tb[Word]
tb['Word']
tb[,Word]
text(x,y,labels=tb[,Word], cex=1.5)
radius <- sqrt( tb$confidence/ pi )
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
x<-rnorm(6,6,3)
y<-rnorm(6,6,1)
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL,xaxt=NULL)
text(x,y,labels=tb[,Word], cex=1)
tb
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/ pi
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence*10
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1.5)
tb$confidence
tb$confidence*10
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/(2*pi)
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,4)
y<-rnorm(10,5,1.5)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,5)
y<-rnorm(10,5,4)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,2)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,1)
y<-rnorm(10,5,0.5)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,2)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,0.5)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
shiny::runApp()
shiny::runApp()
shiny::runApp()
nextword("are you for the follow")
txt.to.words("are you for the follow")
c("are",    "you",    "for",    "the",    "follow")
paste0(c("are",    "you",    "for",    "the",    "follow"))
shiny::runApp()
shiny::runApp()
head(tb)
tb[1,]
as.character(tb[1,])
as.character(tb[,.(Word)][1,])
cat(tb[,.(Word)][1,])
cat(as.character(tb[,.(Word)][1,]))
shiny::runApp()
shiny::runApp()
traindt['the'][order(freq,decreasing=T)][1:10]
traindt['the'][order(freq,decreasing=T)][,.(n1)]
traindt['the'][order(freq,decreasing=T)][,.(n2)]
traindt['the'][order(freq,decreasing=T)]
con1 <- file('final/en_US/Sample/tweetsample.txt', "r")
con2 <- file('final/en_US/Sample/newssample.txt', "r")
con3 <- file('final/en_US/Sample/blogssample.txt', "r")
news<-readLines(con2,skipNul=T)
blogs<-readLines(con3,skipNul=T)
twit<-readLines(con1,skipNul=T)
close(con1);close(con2);close(con3)
train<-concat(news,blogs,twit)
train<-preprocess(train,case="lower")
#pent<-unlist(lapply(train[grep("[^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]*", train)], function(x) make.ngrams(txt.to.words(x, splitting.rule = "[ \t\n]+"), ngram.size = 5)))
#pent<-as.data.table(pent)
#pent<-cSplit(pent,splitCols="pent",sep=" ")
#setnames(pent,colnames(pent),c('n1','n2','n3','n4','n5'))
#pent<-count(pent,colnames(pent))
#setkeyv(pent,colnames(pent))
#pent<-subset(pent,freq>1)
#quad<-unlist(lapply(train[grep("[^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]*", train)], function(x) make.ngrams(txt.to.words(x, splitting.rule = "[ \t\n]+"), ngram.size = 4)))
#quad<-as.data.table(quad)
#quad<-cSplit(quad,splitCols="quad",sep=" ")
#setnames(quad,colnames(quad),c('n1','n2','n3','n4'))
#quad[,c('n5'):=' ']
#quad<-count(quad,colnames(quad))
#setkeyv(quad,colnames(quad))
#quad<-subset(quad,freq>1)
tri <- unlist(lapply(train[grep("[^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]*", train)], function(x) make.ngrams(txt.to.words(x, splitting.rule = "[ \t\n]+"), ngram.size = 3)))
tri<-as.data.table(tri)
tri<-cSplit(tri,splitCols="tri",sep=" ")
setnames(tri,colnames(tri),c('n1','n2','n3'))
#tri[,c('n4','n5'):=' ']
tri<-count(tri,colnames(tri))
con1 <- file('final/en_US/Sample/tweetsample.txt', "r")
con2 <- file('final/en_US/Sample/newssample.txt', "r")
con3 <- file('final/en_US/Sample/blogssample.txt', "r")
news<-readLines(con2,skipNul=T)
blogs<-readLines(con3,skipNul=T)
twit<-readLines(con1,skipNul=T)
close(con1);close(con2);close(con3)
train<-concat(news,blogs,twit)
train<-preprocess(train,case="lower")
#pent<-unlist(lapply(train[grep("[^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]*", train)], function(x) make.ngrams(txt.to.words(x, splitting.rule = "[ \t\n]+"), ngram.size = 5)))
#pent<-as.data.table(pent)
#pent<-cSplit(pent,splitCols="pent",sep=" ")
#setnames(pent,colnames(pent),c('n1','n2','n3','n4','n5'))
#pent<-count(pent,colnames(pent))
#setkeyv(pent,colnames(pent))
#pent<-subset(pent,freq>1)
#quad<-unlist(lapply(train[grep("[^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]*", train)], function(x) make.ngrams(txt.to.words(x, splitting.rule = "[ \t\n]+"), ngram.size = 4)))
#quad<-as.data.table(quad)
#quad<-cSplit(quad,splitCols="quad",sep=" ")
#setnames(quad,colnames(quad),c('n1','n2','n3','n4'))
#quad[,c('n5'):=' ']
#quad<-count(quad,colnames(quad))
#setkeyv(quad,colnames(quad))
#quad<-subset(quad,freq>1)
tri <- unlist(lapply(train[grep("[^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]*", train)], function(x) make.ngrams(txt.to.words(x, splitting.rule = "[ \t\n]+"), ngram.size = 3)))
#tri<-as.data.table(tri)
length(grep("the",tri))
length(grep("and",tri))
length(grep("tha",tri))
traindt[order(freq,decreasing=T)][,.(n1)][1:10]
traindt[order(max(),decreasing=T)][,.(n1)][1:10]
max(grep("a-z",tri))
max(grep("[^ ]*[a-zA-Z]",tri))
head(grep("[^ ]*[a-zA-Z]",tri))
head(tri)
head(grep("*[a-zA-Z]",tri))
max(grep("*[a-zA-Z]",tri))
tri[1008381]
length(grep("*[a-zA-Z]",tri))
tri[1008382]
head(grep("*[a-zA-Z]",tri),n=50)
head(grep("[a-zA-Z]",tri),n=50)
traindt[order(max(),decreasing=T)][,.(n1)][1:10]
bi <- unlist(lapply(train[grep("[^ ]*[aeiouyAEIOUY]+[^ ]* [^ ]*[aeiouyAEIOUY]+[^ ]*", train)], function(x) make.ngrams(txt.to.words(x, splitting.rule = "[ \t\n]+"), ngram.size = 1)))
bi<-as.data.table(bi)
bi<-cSplit(bi,splitCols="bi",sep=" ")
#setnames(bi,colnames(bi),c('n1','n2'))
#bi[,c('n3','n4','n5'):=' ']
bi<-count(bi,colnames(bi))
source('~/Documents/R Working Directory/Capstone_Final/initcleaning.R')
traindt[order(freq,decreasing=T)][,.(n1)][1:10]
traindt[order(freq,decreasing=T)][,.(n1,freq)][1:10]
traindt['the'][order(freq,decreasing=T)][,.(n1,freq)][1]
traindt['the'][order(freq,decreasing=T)][,.(n1,freq)][1:3]
traindt['the'][order(freq,decreasing=T)][,.(sum(n1)]
traindt['the'][order(freq,decreasing=T)][,.(sum(n1)]
traindt['the'][order(freq,decreasing=T)][,.(sum(n1))]
traindt['the'][order(freq,decreasing=T)][,.(sum(as.numeric(n1)))]
traindt['the'][order(freq,decreasing=T)][,.(sum(freq))]
bi[order(freq,decreasing=T)][,.(n1)][1:10]
colnames(bi)
bi[order(freq,decreasing=T)][1:10]
v(bi,colnames(bi))
setkeyv(bi,colnames(bi))
source('~/Documents/R Working Directory/Capstone_Final/initcleaning.R')
source('~/Documents/R Working Directory/Capstone_Final/initcleaning.R')
bi<-as.data.table(bi)
setkeyv(bi,colnames(bi))
bi[order(freq,decreasing=T)][1:10]
bi<-bi[order(freq,decreasing=T)][1:10]
bi
bi[,.(Word=n3,confidence=round(freq/sum(freq)*100,digits=2)," "="%")]
bi[,.(Word=bi_1,confidence=round(freq/sum(freq)*100,digits=2)," "="%")]
bi[,.(Word=bi_1,confidence=round(freq/sum(freq[1:10])*100,digits=2)," "="%")]
bi[,.(Word=bi_1,confidence=round(freq/sum(freq[1:10,])*100,digits=2)," "="%")]
bi
bi[freq]
bi[,freq]
bi[,freq]/sum(bi[,freq])*100
bi[,freq]
bi
bi[,freq]
bi[,freq]/sum(bi[,freq])*100
sum(bi[,freq]/sum(bi[,freq])*100)
bi[,freq]
bi[,.(Word=bi_1,confidence=round(freq/sum(freq[1:10])*100,digits=2)," "="%")]
bi[,Word]
bi[,bi_1]
as.character(bi[,bi_1])
as.character(bi[,freq])
bi[,.(Word=bi_1,confidence=round(freq/sum(freq[1:10])*100,digits=2)," "="%")][,freq]
bi[,.(Word=bi_1,confidence=round(freq/sum(freq[1:10])*100,digits=2)," "="%")][,.(confidence)]
bi[,.(Word=bi_1,confidence=round(freq/sum(freq[1:10])*100,digits=2)," "="%")][,.confidence]
bi[,.(Word=bi_1,confidence=round(freq/sum(freq[1:10])*100,digits=2)," "="%")][,confidence]
c(22.52, 13.77, 11.59, 11.59,  9.73,  7.87,  7.03,  5.60,  5.41,  4.88)
source('~/Documents/R Working Directory/Capstone_Final/nextword.R')
nextword("are my parents")
nextword("ljk fads")
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=radius, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
shiny::runApp()
shiny::runApp()
x<-rnorm(100,50,30)
y<-rnorm(100,50,10)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.5)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1)
tb<-nextword("are you the")
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=1)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.66)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=NULL, ylab=NULL)
text(x,y,labels=tb[,Word], cex=0.66)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=0, ylab=0)
text(x,y,labels=tb[,Word], cex=0.66)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence*1000, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence*1000, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
x<-rnorm(10,5,3)
y<-rnorm(10,5,1)
radius <- tb$confidence/pi
symbols(x,y, circles=tb$confidence/1000, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
symbols(x,y, circles=tb$confidence/1000, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
tb*confidence*1000
tb$confidence*1000
symbols(x,y, circles=tb$confidence, inches=0.35, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
symbols(x,y, circles=tb$confidence, inches=0.40, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
symbols(x,y, circles=tb$confidence, inches=0.66, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
symbols(x,y, circles=tb$confidence, inches=1, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
symbols(x,y, circles=radius, inches=1, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=F, ylab=F)
text(x,y,labels=tb[,Word], cex=0.66)
shiny::runApp()
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=T, ylab=T)
text(x,y,labels=tb[,Word], cex=0.66)
par(xaxt='n')
par(col.axis='white',col.lab='white',col.main='white')
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=T, ylab=T)
text(x,y,labels=tb[,Word], cex=0.66)
par(bty='n',col.axis='white',col.lab='white',col.main='white')
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=T, ylab=T)
text(x,y,labels=tb[,Word], cex=0.66)
par(bty='n',col.axis='white',col.lab='white',col.main='white',tcl=-0.5)
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=T, ylab=T)
text(x,y,labels=tb[,Word], cex=0.66)
par(bty='n',col.axis='white',col.lab='white',col.main='white',xaxt='n',yaxt='n')
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=T, ylab=T)
text(x,y,labels=tb[,Word], cex=0.66)
par(bty='n',xaxt='n',yaxt='n')
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=T, ylab=T)
text(x,y,labels=tb[,Word], cex=0.66)
par(bty='n', xaxt='n', yaxt='n')
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=T, ylab=T)
text(x,y,labels=tb[,Word], cex=0.66)
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=T, ylab=T)
text(x,y,labels=tb[,Word], cex=0.66)
shiny::runApp()
par(bty='n',col.lab='white',xaxt='n',yaxt='n')
symbols(x,y, circles=radius, inches=1.5, fg="white", bg=colors[round(rnorm(1,328,160))], xlab=T, ylab=T)
text(x,y,labels=tb[,Word], cex=0.66)
shiny::runApp()
shiny::runApp()
display.brewer.all()
Pastel2
colors <- brewer.pal(12, "Spectral")
colors <- brewer.pal(11, "Spectral")
pal <- colorRampPalette(colors)
pal(30)
shiny::runApp()
display.brewer.all()
shiny::runApp()
colors[round(rnorm(10,328,160))]
colors[round(rnorm(1,328,160))]
colors()
colors[round(rnorm(1,328,160))]
colors[[round(rnorm(1,328,160))]]
round(rnorm(1,328,160))
colors[[round(rnorm(1,328,160))]]
colors[[round(rnorm(1,328,160))]]
round(rnorm(1,328,160))
colors[242]
colors<-as.list(colors())
colors[242]
class(colors())
colors[242]
colors<-colors()
colors[242]
shiny::runApp()
shiny::runApp()
round(rnorm(100,328,160))
round(rnorm(100,328,164))
abs(round(rnorm(100,328,164)))
length(colors())
abs(round(rnorm(100,328,328)))
abs(round(rnorm(100,328,256)))
mean(1:657)
sd(1:657)
abs(round(rnorm(100,328,190)))
abs(round(rnorm(100,329,190)))
color<-abs(round(rnorm(100,329,190)))
color<657
color<-abs(round(rnorm(100,329,190)))
color<657
color<-abs(round(rnorm(100,329,190)))
color<657
color<-abs(round(rnorm(100,329,190)))
color<657
4/100
shiny::runApp()
shiny::runApp()
traindt<-fread("traindt.csv");traindt[,V1:=NULL]
